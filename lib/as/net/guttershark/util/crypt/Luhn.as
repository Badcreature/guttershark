package net.guttershark.util.crypt{	/**	 * Validate a number with the Luhn Algorithm (aka Mod10) which is standard	 * for pre-validating card numbers before being processed for approval.	 * 	 * @see http://en.wikipedia.org/wiki/Luhn_algorithm	 */	final public class Luhn	{		/**		 * Validate a credit card number with mod10		 * 		 * @param strNumber The string.		 */		public static function mod10(strNumber:String):Boolean 		{			var aNumbers:Array = strNumber.split("");			var nSum_1:Number = 0;			var nSum_2:Number = 0;			var nSum_Total:Number = 0;			var nParity:Number = aNumbers.length % 2;			var i:int = 0;			var l:int = aNumbers.length;			for(i;i<l;i++)			{				aNumbers[i] = Number(aNumbers[i]);				if(i % 2 == nParity) 				{					aNumbers[i] *= 2;					aNumbers[i] = aNumbers[i] > 9 ? aNumbers[i] - 9 : aNumbers[i];					nSum_1 += aNumbers[i];				}				else nSum_2 += aNumbers[i];			}			nSum_Total = nSum_1 + nSum_2;			return (nSum_Total % 10 == 0);		}		}}