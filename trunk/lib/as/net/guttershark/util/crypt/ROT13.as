package net.guttershark.util.crypt{	import net.guttershark.util.crypt.ICipher;	/**	 * Encodes and decodes a string using the ROT13	 * algorithm (aka a simple Caesar cipher)	 * @see http://en.wikipedia.org/wiki/ROT13	 */	final public class ROT13 implements ICipher 	{		private static const ROT13_CHARS:String = "ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMabcdefghijklmnopqrstuvwxyzabcdefghijklm";		/**		 * Encodes or decodes a ROT13 string.		 * @param src (String)		 * @return String		 */		public static function calculate(src:String):String 		{			var calculated:String = new String("");			for (var i:Number = 0;i < src.length; i++)			{				var character:String = src.charAt(i);				var pos:Number = ROT13_CHARS.indexOf(character);				if (pos > -1) character = ROT13_CHARS.charAt(pos + 13);				calculated += character;			}			return calculated;		}	}}