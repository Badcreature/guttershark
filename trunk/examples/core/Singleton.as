package {		import flash.utils.Dictionary;	import net.guttershark.util.Assert;		public class Singleton	{				private static var insts:Dictionary;				public static function gi(clazz:Class,...cancelParentClasses:Array):*		{			var inst:*;			if(!insts) insts = new Dictionary();			if(insts[clazz] && insts[clazz] != -1) inst = insts[clazz];			if(!inst)			{				inst = new clazz();				insts[clazz] = inst;			}			if(cancelParentClasses)			{				for each(var cl:Class in cancelParentClasses){insts[cl] = -1;}			}			return inst;		}				public static function assertSingle(clazz:Class):void		{			if(insts[clazz]) throw new Error("Error creating class, it is a singleton");		}	}}